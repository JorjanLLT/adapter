// Code generated by ent, DO NOT EDIT.

package heartbeat

import (
	"time"

	"github.com/auroraride/adapter/defs/xcdef"
)

const (
	// Label holds the string label denoting the heartbeat type in the database.
	Label = "heartbeat"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldSn holds the string denoting the sn field in the database.
	FieldSn = "sn"
	// FieldBatteryID holds the string denoting the battery_id field in the database.
	FieldBatteryID = "battery_id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldVoltage holds the string denoting the voltage field in the database.
	FieldVoltage = "voltage"
	// FieldCurrent holds the string denoting the current field in the database.
	FieldCurrent = "current"
	// FieldSoc holds the string denoting the soc field in the database.
	FieldSoc = "soc"
	// FieldSoh holds the string denoting the soh field in the database.
	FieldSoh = "soh"
	// FieldInCabinet holds the string denoting the in_cabinet field in the database.
	FieldInCabinet = "in_cabinet"
	// FieldCapacity holds the string denoting the capacity field in the database.
	FieldCapacity = "capacity"
	// FieldMonMaxVoltage holds the string denoting the mon_max_voltage field in the database.
	FieldMonMaxVoltage = "mon_max_voltage"
	// FieldMonMaxVoltagePos holds the string denoting the mon_max_voltage_pos field in the database.
	FieldMonMaxVoltagePos = "mon_max_voltage_pos"
	// FieldMonMinVoltage holds the string denoting the mon_min_voltage field in the database.
	FieldMonMinVoltage = "mon_min_voltage"
	// FieldMonMinVoltagePos holds the string denoting the mon_min_voltage_pos field in the database.
	FieldMonMinVoltagePos = "mon_min_voltage_pos"
	// FieldMaxTemp holds the string denoting the max_temp field in the database.
	FieldMaxTemp = "max_temp"
	// FieldMinTemp holds the string denoting the min_temp field in the database.
	FieldMinTemp = "min_temp"
	// FieldFaults holds the string denoting the faults field in the database.
	FieldFaults = "faults"
	// FieldMosStatus holds the string denoting the mos_status field in the database.
	FieldMosStatus = "mos_status"
	// FieldMonVoltage holds the string denoting the mon_voltage field in the database.
	FieldMonVoltage = "mon_voltage"
	// FieldTemp holds the string denoting the temp field in the database.
	FieldTemp = "temp"
	// FieldMosTemp holds the string denoting the mos_temp field in the database.
	FieldMosTemp = "mos_temp"
	// FieldEnvTemp holds the string denoting the env_temp field in the database.
	FieldEnvTemp = "env_temp"
	// FieldGeom holds the string denoting the geom field in the database.
	FieldGeom = "geom"
	// FieldGps holds the string denoting the gps field in the database.
	FieldGps = "gps"
	// FieldStrength holds the string denoting the strength field in the database.
	FieldStrength = "strength"
	// FieldCycles holds the string denoting the cycles field in the database.
	FieldCycles = "cycles"
	// FieldChargingTime holds the string denoting the charging_time field in the database.
	FieldChargingTime = "charging_time"
	// FieldDisChargingTime holds the string denoting the dis_charging_time field in the database.
	FieldDisChargingTime = "dis_charging_time"
	// FieldUsingTime holds the string denoting the using_time field in the database.
	FieldUsingTime = "using_time"
	// FieldTotalChargingTime holds the string denoting the total_charging_time field in the database.
	FieldTotalChargingTime = "total_charging_time"
	// FieldTotalDisChargingTime holds the string denoting the total_dis_charging_time field in the database.
	FieldTotalDisChargingTime = "total_dis_charging_time"
	// FieldTotalUsingTime holds the string denoting the total_using_time field in the database.
	FieldTotalUsingTime = "total_using_time"
	// EdgeBattery holds the string denoting the battery edge name in mutations.
	EdgeBattery = "battery"
	// Table holds the table name of the heartbeat in the database.
	Table = "heartbeat"
	// BatteryTable is the table that holds the battery relation/edge.
	BatteryTable = "heartbeat"
	// BatteryInverseTable is the table name for the Battery entity.
	// It exists in this package in order to avoid circular dependency with the "battery" package.
	BatteryInverseTable = "battery"
	// BatteryColumn is the table column denoting the battery relation/edge.
	BatteryColumn = "battery_id"
)

// Columns holds all SQL columns for heartbeat fields.
var Columns = []string{
	FieldID,
	FieldSn,
	FieldBatteryID,
	FieldCreatedAt,
	FieldVoltage,
	FieldCurrent,
	FieldSoc,
	FieldSoh,
	FieldInCabinet,
	FieldCapacity,
	FieldMonMaxVoltage,
	FieldMonMaxVoltagePos,
	FieldMonMinVoltage,
	FieldMonMinVoltagePos,
	FieldMaxTemp,
	FieldMinTemp,
	FieldFaults,
	FieldMosStatus,
	FieldMonVoltage,
	FieldTemp,
	FieldMosTemp,
	FieldEnvTemp,
	FieldGeom,
	FieldGps,
	FieldStrength,
	FieldCycles,
	FieldChargingTime,
	FieldDisChargingTime,
	FieldUsingTime,
	FieldTotalChargingTime,
	FieldTotalDisChargingTime,
	FieldTotalUsingTime,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultGps holds the default value on creation for the "gps" field.
	DefaultGps xcdef.GPSStatus
)
