// Code generated by ent, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/auroraride/adapter/defs/batdef"
	"github.com/auroraride/adapter/defs/xcdef"
	"github.com/auroraride/adapter/defs/xcdef/ent/battery"
	"github.com/auroraride/adapter/defs/xcdef/ent/fault"
	"github.com/auroraride/adapter/defs/xcdef/ent/heartbeat"
	"github.com/auroraride/adapter/defs/xcdef/ent/reign"
	"github.com/auroraride/adapter/defs/xcdef/ent/schema"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	batteryMixin := schema.Battery{}.Mixin()
	batteryMixinFields0 := batteryMixin[0].Fields()
	_ = batteryMixinFields0
	batteryFields := schema.Battery{}.Fields()
	_ = batteryFields
	// batteryDescCreatedAt is the schema descriptor for created_at field.
	batteryDescCreatedAt := batteryMixinFields0[0].Descriptor()
	// battery.DefaultCreatedAt holds the default value on creation for the created_at field.
	battery.DefaultCreatedAt = batteryDescCreatedAt.Default.(func() time.Time)
	// batteryDescUpdatedAt is the schema descriptor for updated_at field.
	batteryDescUpdatedAt := batteryMixinFields0[1].Descriptor()
	// battery.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	battery.DefaultUpdatedAt = batteryDescUpdatedAt.Default.(func() time.Time)
	// battery.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	battery.UpdateDefaultUpdatedAt = batteryDescUpdatedAt.UpdateDefault.(func() time.Time)
	faultFields := schema.Fault{}.Fields()
	_ = faultFields
	// faultDescBeginAt is the schema descriptor for begin_at field.
	faultDescBeginAt := faultFields[3].Descriptor()
	// fault.DefaultBeginAt holds the default value on creation for the begin_at field.
	fault.DefaultBeginAt = faultDescBeginAt.Default.(func() time.Time)
	heartbeatFields := schema.Heartbeat{}.Fields()
	_ = heartbeatFields
	// heartbeatDescCreatedAt is the schema descriptor for created_at field.
	heartbeatDescCreatedAt := heartbeatFields[2].Descriptor()
	// heartbeat.DefaultCreatedAt holds the default value on creation for the created_at field.
	heartbeat.DefaultCreatedAt = heartbeatDescCreatedAt.Default.(func() time.Time)
	// heartbeatDescGps is the schema descriptor for gps field.
	heartbeatDescGps := heartbeatFields[22].Descriptor()
	// heartbeat.DefaultGps holds the default value on creation for the gps field.
	heartbeat.DefaultGps = heartbeatDescGps.Default.(xcdef.GPSStatus)
	reignFields := schema.Reign{}.Fields()
	_ = reignFields
	// reignDescAction is the schema descriptor for action field.
	reignDescAction := reignFields[0].Descriptor()
	// reign.DefaultAction holds the default value on creation for the action field.
	reign.DefaultAction = reignDescAction.Default.(batdef.ReignAction)
	// reignDescCreatedAt is the schema descriptor for created_at field.
	reignDescCreatedAt := reignFields[3].Descriptor()
	// reign.DefaultCreatedAt holds the default value on creation for the created_at field.
	reign.DefaultCreatedAt = reignDescCreatedAt.Default.(func() time.Time)
}
