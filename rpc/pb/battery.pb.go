// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: battery.proto

package pb

import (
	xcpb "github.com/auroraride/adapter/rpc/pb/xcpb"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BatteryFaultType int32

const (
	BatteryFaultType_BatteryFaultVoltageLow                 BatteryFaultType = 0  // 总压低
	BatteryFaultType_BatteryFaultVoltageHigh                BatteryFaultType = 1  // 总压高
	BatteryFaultType_BatteryFaultMonVoltageLow              BatteryFaultType = 2  // 单体低
	BatteryFaultType_BatteryFaultMonVoltageHigh             BatteryFaultType = 3  // 单体高
	BatteryFaultType_BatteryFaultDischargeOvercurrent       BatteryFaultType = 6  // 放电过流
	BatteryFaultType_BatteryFaultChargeOvercurrent          BatteryFaultType = 7  // 充电过流
	BatteryFaultType_BatteryFaultSocLow                     BatteryFaultType = 8  // SOC低
	BatteryFaultType_BatteryFaultChargingTemperatureHigh    BatteryFaultType = 11 // 充电高温
	BatteryFaultType_BatteryFaultChargingTemperatureLow     BatteryFaultType = 12 // 充电低温
	BatteryFaultType_BatteryFaultDisChargingTemperatureHigh BatteryFaultType = 13 // 放电高温
	BatteryFaultType_BatteryFaultDisChargingTemperatureLow  BatteryFaultType = 14 // 放电低温
	BatteryFaultType_BatteryFaultShortCircuit               BatteryFaultType = 15 // 短路
	BatteryFaultType_BatteryFaultMosTemperatureHigh         BatteryFaultType = 16 // MOS高温
)

// Enum value maps for BatteryFaultType.
var (
	BatteryFaultType_name = map[int32]string{
		0:  "BatteryFaultVoltageLow",
		1:  "BatteryFaultVoltageHigh",
		2:  "BatteryFaultMonVoltageLow",
		3:  "BatteryFaultMonVoltageHigh",
		6:  "BatteryFaultDischargeOvercurrent",
		7:  "BatteryFaultChargeOvercurrent",
		8:  "BatteryFaultSocLow",
		11: "BatteryFaultChargingTemperatureHigh",
		12: "BatteryFaultChargingTemperatureLow",
		13: "BatteryFaultDisChargingTemperatureHigh",
		14: "BatteryFaultDisChargingTemperatureLow",
		15: "BatteryFaultShortCircuit",
		16: "BatteryFaultMosTemperatureHigh",
	}
	BatteryFaultType_value = map[string]int32{
		"BatteryFaultVoltageLow":                 0,
		"BatteryFaultVoltageHigh":                1,
		"BatteryFaultMonVoltageLow":              2,
		"BatteryFaultMonVoltageHigh":             3,
		"BatteryFaultDischargeOvercurrent":       6,
		"BatteryFaultChargeOvercurrent":          7,
		"BatteryFaultSocLow":                     8,
		"BatteryFaultChargingTemperatureHigh":    11,
		"BatteryFaultChargingTemperatureLow":     12,
		"BatteryFaultDisChargingTemperatureHigh": 13,
		"BatteryFaultDisChargingTemperatureLow":  14,
		"BatteryFaultShortCircuit":               15,
		"BatteryFaultMosTemperatureHigh":         16,
	}
)

func (x BatteryFaultType) Enum() *BatteryFaultType {
	p := new(BatteryFaultType)
	*p = x
	return p
}

func (x BatteryFaultType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BatteryFaultType) Descriptor() protoreflect.EnumDescriptor {
	return file_battery_proto_enumTypes[0].Descriptor()
}

func (BatteryFaultType) Type() protoreflect.EnumType {
	return &file_battery_proto_enumTypes[0]
}

func (x BatteryFaultType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BatteryFaultType.Descriptor instead.
func (BatteryFaultType) EnumDescriptor() ([]byte, []int) {
	return file_battery_proto_rawDescGZIP(), []int{0}
}

type BatterySnRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sn string `protobuf:"bytes,1,opt,name=sn,proto3" json:"sn,omitempty"`
}

func (x *BatterySnRequest) Reset() {
	*x = BatterySnRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battery_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatterySnRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatterySnRequest) ProtoMessage() {}

func (x *BatterySnRequest) ProtoReflect() protoreflect.Message {
	mi := &file_battery_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatterySnRequest.ProtoReflect.Descriptor instead.
func (*BatterySnRequest) Descriptor() ([]byte, []int) {
	return file_battery_proto_rawDescGZIP(), []int{0}
}

func (x *BatterySnRequest) GetSn() string {
	if x != nil {
		return x.Sn
	}
	return ""
}

type BatteryBatchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sn []string `protobuf:"bytes,1,rep,name=sn,proto3" json:"sn,omitempty"`
}

func (x *BatteryBatchRequest) Reset() {
	*x = BatteryBatchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battery_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatteryBatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatteryBatchRequest) ProtoMessage() {}

func (x *BatteryBatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_battery_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatteryBatchRequest.ProtoReflect.Descriptor instead.
func (*BatteryBatchRequest) Descriptor() ([]byte, []int) {
	return file_battery_proto_rawDescGZIP(), []int{1}
}

func (x *BatteryBatchRequest) GetSn() []string {
	if x != nil {
		return x.Sn
	}
	return nil
}

type BatteryBatchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items map[string]*xcpb.Battery `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *BatteryBatchResponse) Reset() {
	*x = BatteryBatchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battery_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatteryBatchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatteryBatchResponse) ProtoMessage() {}

func (x *BatteryBatchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_battery_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatteryBatchResponse.ProtoReflect.Descriptor instead.
func (*BatteryBatchResponse) Descriptor() ([]byte, []int) {
	return file_battery_proto_rawDescGZIP(), []int{2}
}

func (x *BatteryBatchResponse) GetItems() map[string]*xcpb.Battery {
	if x != nil {
		return x.Items
	}
	return nil
}

type BatterySampleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Voltage float64 `protobuf:"fixed64,1,opt,name=voltage,proto3" json:"voltage,omitempty"`
	Current float64 `protobuf:"fixed64,2,opt,name=current,proto3" json:"current,omitempty"`
	Soc     uint32  `protobuf:"varint,3,opt,name=soc,proto3" json:"soc,omitempty"`
	Geom    []byte  `protobuf:"bytes,4,opt,name=geom,proto3" json:"geom,omitempty"`
}

func (x *BatterySampleResponse) Reset() {
	*x = BatterySampleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battery_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatterySampleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatterySampleResponse) ProtoMessage() {}

func (x *BatterySampleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_battery_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatterySampleResponse.ProtoReflect.Descriptor instead.
func (*BatterySampleResponse) Descriptor() ([]byte, []int) {
	return file_battery_proto_rawDescGZIP(), []int{3}
}

func (x *BatterySampleResponse) GetVoltage() float64 {
	if x != nil {
		return x.Voltage
	}
	return 0
}

func (x *BatterySampleResponse) GetCurrent() float64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *BatterySampleResponse) GetSoc() uint32 {
	if x != nil {
		return x.Soc
	}
	return 0
}

func (x *BatterySampleResponse) GetGeom() []byte {
	if x != nil {
		return x.Geom
	}
	return nil
}

type BatteryFaultListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current int64                  `protobuf:"varint,1,opt,name=current,proto3" json:"current,omitempty"`
	Sn      *string                `protobuf:"bytes,2,opt,name=sn,proto3,oneof" json:"sn,omitempty"`
	BeginAt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=begin_at,json=beginAt,proto3,oneof" json:"begin_at,omitempty"`
	EndAt   *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=end_at,json=endAt,proto3,oneof" json:"end_at,omitempty"`
	Fault   *BatteryFaultType      `protobuf:"varint,5,opt,name=fault,proto3,enum=pb.BatteryFaultType,oneof" json:"fault,omitempty"`
}

func (x *BatteryFaultListRequest) Reset() {
	*x = BatteryFaultListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battery_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatteryFaultListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatteryFaultListRequest) ProtoMessage() {}

func (x *BatteryFaultListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_battery_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatteryFaultListRequest.ProtoReflect.Descriptor instead.
func (*BatteryFaultListRequest) Descriptor() ([]byte, []int) {
	return file_battery_proto_rawDescGZIP(), []int{4}
}

func (x *BatteryFaultListRequest) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *BatteryFaultListRequest) GetSn() string {
	if x != nil && x.Sn != nil {
		return *x.Sn
	}
	return ""
}

func (x *BatteryFaultListRequest) GetBeginAt() *timestamppb.Timestamp {
	if x != nil {
		return x.BeginAt
	}
	return nil
}

func (x *BatteryFaultListRequest) GetEndAt() *timestamppb.Timestamp {
	if x != nil {
		return x.EndAt
	}
	return nil
}

func (x *BatteryFaultListRequest) GetFault() BatteryFaultType {
	if x != nil && x.Fault != nil {
		return *x.Fault
	}
	return BatteryFaultType_BatteryFaultVoltageLow
}

type BatteryFault struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sn      string                 `protobuf:"bytes,2,opt,name=sn,proto3" json:"sn,omitempty"`
	Fault   BatteryFaultType       `protobuf:"varint,3,opt,name=fault,proto3,enum=pb.BatteryFaultType" json:"fault,omitempty"`
	BeginAt *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=begin_at,json=beginAt,proto3" json:"begin_at,omitempty"`
	EndAt   *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=end_at,json=endAt,proto3" json:"end_at,omitempty"`
}

func (x *BatteryFault) Reset() {
	*x = BatteryFault{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battery_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatteryFault) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatteryFault) ProtoMessage() {}

func (x *BatteryFault) ProtoReflect() protoreflect.Message {
	mi := &file_battery_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatteryFault.ProtoReflect.Descriptor instead.
func (*BatteryFault) Descriptor() ([]byte, []int) {
	return file_battery_proto_rawDescGZIP(), []int{5}
}

func (x *BatteryFault) GetSn() string {
	if x != nil {
		return x.Sn
	}
	return ""
}

func (x *BatteryFault) GetFault() BatteryFaultType {
	if x != nil {
		return x.Fault
	}
	return BatteryFaultType_BatteryFaultVoltageLow
}

func (x *BatteryFault) GetBeginAt() *timestamppb.Timestamp {
	if x != nil {
		return x.BeginAt
	}
	return nil
}

func (x *BatteryFault) GetEndAt() *timestamppb.Timestamp {
	if x != nil {
		return x.EndAt
	}
	return nil
}

type BatteryFaultListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pagination *Pagination     `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
	Items      []*BatteryFault `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *BatteryFaultListResponse) Reset() {
	*x = BatteryFaultListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battery_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatteryFaultListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatteryFaultListResponse) ProtoMessage() {}

func (x *BatteryFaultListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_battery_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatteryFaultListResponse.ProtoReflect.Descriptor instead.
func (*BatteryFaultListResponse) Descriptor() ([]byte, []int) {
	return file_battery_proto_rawDescGZIP(), []int{6}
}

func (x *BatteryFaultListResponse) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *BatteryFaultListResponse) GetItems() []*BatteryFault {
	if x != nil {
		return x.Items
	}
	return nil
}

var File_battery_proto protoreflect.FileDescriptor

var file_battery_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x62, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x02, 0x70, 0x62, 0x1a, 0x0f, 0x78, 0x63, 0x70, 0x62, 0x2f, 0x78, 0x63, 0x70, 0x62, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x22, 0x0a, 0x10, 0x42, 0x61, 0x74, 0x74, 0x65,
	0x72, 0x79, 0x53, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x73,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x73, 0x6e, 0x22, 0x25, 0x0a, 0x13, 0x42,
	0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x73, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x02,
	0x73, 0x6e, 0x22, 0x9a, 0x01, 0x0a, 0x14, 0x42, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70, 0x62, 0x2e,
	0x42, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x1a, 0x47, 0x0a, 0x0a, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x23, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x78, 0x63, 0x70, 0x62, 0x2e, 0x42, 0x61, 0x74,
	0x74, 0x65, 0x72, 0x79, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x71, 0x0a, 0x15, 0x42, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x6f, 0x6c, 0x74,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x76, 0x6f, 0x6c, 0x74, 0x61,
	0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x73, 0x6f, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x73, 0x6f, 0x63, 0x12, 0x12,
	0x0a, 0x04, 0x67, 0x65, 0x6f, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x67, 0x65,
	0x6f, 0x6d, 0x22, 0x96, 0x02, 0x0a, 0x17, 0x42, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x46, 0x61,
	0x75, 0x6c, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x13, 0x0a, 0x02, 0x73, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x02, 0x73, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x3a, 0x0a,
	0x08, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x01, 0x52, 0x07, 0x62,
	0x65, 0x67, 0x69, 0x6e, 0x41, 0x74, 0x88, 0x01, 0x01, 0x12, 0x36, 0x0a, 0x06, 0x65, 0x6e, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x02, 0x52, 0x05, 0x65, 0x6e, 0x64, 0x41, 0x74, 0x88, 0x01,
	0x01, 0x12, 0x2f, 0x0a, 0x05, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x46, 0x61, 0x75,
	0x6c, 0x74, 0x54, 0x79, 0x70, 0x65, 0x48, 0x03, 0x52, 0x05, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x88,
	0x01, 0x01, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x73, 0x6e, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x62, 0x65,
	0x67, 0x69, 0x6e, 0x5f, 0x61, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x61,
	0x74, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x22, 0xb4, 0x01, 0x0a, 0x0c,
	0x42, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x46, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x73, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x73, 0x6e, 0x12, 0x2a, 0x0a, 0x05,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x70, 0x62,
	0x2e, 0x42, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x46, 0x61, 0x75, 0x6c, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x05, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x35, 0x0a, 0x08, 0x62, 0x65, 0x67, 0x69,
	0x6e, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x41, 0x74, 0x12,
	0x31, 0x0a, 0x06, 0x65, 0x6e, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x65, 0x6e, 0x64,
	0x41, 0x74, 0x22, 0x72, 0x0a, 0x18, 0x42, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x46, 0x61, 0x75,
	0x6c, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e,
	0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26,
	0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x70, 0x62, 0x2e, 0x42, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x46, 0x61, 0x75, 0x6c, 0x74, 0x52,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x2a, 0xd5, 0x03, 0x0a, 0x10, 0x42, 0x61, 0x74, 0x74, 0x65,
	0x72, 0x79, 0x46, 0x61, 0x75, 0x6c, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x16, 0x42,
	0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x46, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x6f, 0x6c, 0x74, 0x61,
	0x67, 0x65, 0x4c, 0x6f, 0x77, 0x10, 0x00, 0x12, 0x1b, 0x0a, 0x17, 0x42, 0x61, 0x74, 0x74, 0x65,
	0x72, 0x79, 0x46, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x48, 0x69,
	0x67, 0x68, 0x10, 0x01, 0x12, 0x1d, 0x0a, 0x19, 0x42, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x46,
	0x61, 0x75, 0x6c, 0x74, 0x4d, 0x6f, 0x6e, 0x56, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x4c, 0x6f,
	0x77, 0x10, 0x02, 0x12, 0x1e, 0x0a, 0x1a, 0x42, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x46, 0x61,
	0x75, 0x6c, 0x74, 0x4d, 0x6f, 0x6e, 0x56, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x48, 0x69, 0x67,
	0x68, 0x10, 0x03, 0x12, 0x24, 0x0a, 0x20, 0x42, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x46, 0x61,
	0x75, 0x6c, 0x74, 0x44, 0x69, 0x73, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x4f, 0x76, 0x65, 0x72,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x10, 0x06, 0x12, 0x21, 0x0a, 0x1d, 0x42, 0x61, 0x74,
	0x74, 0x65, 0x72, 0x79, 0x46, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x4f,
	0x76, 0x65, 0x72, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x10, 0x07, 0x12, 0x16, 0x0a, 0x12,
	0x42, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x46, 0x61, 0x75, 0x6c, 0x74, 0x53, 0x6f, 0x63, 0x4c,
	0x6f, 0x77, 0x10, 0x08, 0x12, 0x27, 0x0a, 0x23, 0x42, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x46,
	0x61, 0x75, 0x6c, 0x74, 0x43, 0x68, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x67, 0x54, 0x65, 0x6d, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x48, 0x69, 0x67, 0x68, 0x10, 0x0b, 0x12, 0x26, 0x0a,
	0x22, 0x42, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x46, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x68, 0x61,
	0x72, 0x67, 0x69, 0x6e, 0x67, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x4c, 0x6f, 0x77, 0x10, 0x0c, 0x12, 0x2a, 0x0a, 0x26, 0x42, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79,
	0x46, 0x61, 0x75, 0x6c, 0x74, 0x44, 0x69, 0x73, 0x43, 0x68, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x67,
	0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x48, 0x69, 0x67, 0x68, 0x10,
	0x0d, 0x12, 0x29, 0x0a, 0x25, 0x42, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x46, 0x61, 0x75, 0x6c,
	0x74, 0x44, 0x69, 0x73, 0x43, 0x68, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x67, 0x54, 0x65, 0x6d, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x4c, 0x6f, 0x77, 0x10, 0x0e, 0x12, 0x1c, 0x0a, 0x18,
	0x42, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x46, 0x61, 0x75, 0x6c, 0x74, 0x53, 0x68, 0x6f, 0x72,
	0x74, 0x43, 0x69, 0x72, 0x63, 0x75, 0x69, 0x74, 0x10, 0x0f, 0x12, 0x22, 0x0a, 0x1e, 0x42, 0x61,
	0x74, 0x74, 0x65, 0x72, 0x79, 0x46, 0x61, 0x75, 0x6c, 0x74, 0x4d, 0x6f, 0x73, 0x54, 0x65, 0x6d,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x48, 0x69, 0x67, 0x68, 0x10, 0x10, 0x32, 0xc8,
	0x01, 0x0a, 0x07, 0x42, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x12, 0x3a, 0x0a, 0x05, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x12, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79,
	0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x70,
	0x62, 0x2e, 0x42, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x06, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x12, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x53, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x61, 0x74, 0x74,
	0x65, 0x72, 0x79, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x46, 0x0a, 0x09, 0x46, 0x61, 0x75, 0x6c, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1b,
	0x2e, 0x70, 0x62, 0x2e, 0x42, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x46, 0x61, 0x75, 0x6c, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x70, 0x62,
	0x2e, 0x42, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x46, 0x61, 0x75, 0x6c, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x26, 0x5a, 0x24, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x75, 0x72, 0x6f, 0x72, 0x61, 0x72, 0x69,
	0x64, 0x65, 0x2f, 0x61, 0x64, 0x61, 0x70, 0x74, 0x65, 0x72, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x70,
	0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_battery_proto_rawDescOnce sync.Once
	file_battery_proto_rawDescData = file_battery_proto_rawDesc
)

func file_battery_proto_rawDescGZIP() []byte {
	file_battery_proto_rawDescOnce.Do(func() {
		file_battery_proto_rawDescData = protoimpl.X.CompressGZIP(file_battery_proto_rawDescData)
	})
	return file_battery_proto_rawDescData
}

var file_battery_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_battery_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_battery_proto_goTypes = []interface{}{
	(BatteryFaultType)(0),            // 0: pb.BatteryFaultType
	(*BatterySnRequest)(nil),         // 1: pb.BatterySnRequest
	(*BatteryBatchRequest)(nil),      // 2: pb.BatteryBatchRequest
	(*BatteryBatchResponse)(nil),     // 3: pb.BatteryBatchResponse
	(*BatterySampleResponse)(nil),    // 4: pb.BatterySampleResponse
	(*BatteryFaultListRequest)(nil),  // 5: pb.BatteryFaultListRequest
	(*BatteryFault)(nil),             // 6: pb.BatteryFault
	(*BatteryFaultListResponse)(nil), // 7: pb.BatteryFaultListResponse
	nil,                              // 8: pb.BatteryBatchResponse.ItemsEntry
	(*timestamppb.Timestamp)(nil),    // 9: google.protobuf.Timestamp
	(*Pagination)(nil),               // 10: pb.Pagination
	(*xcpb.Battery)(nil),             // 11: xcpb.Battery
}
var file_battery_proto_depIdxs = []int32{
	8,  // 0: pb.BatteryBatchResponse.items:type_name -> pb.BatteryBatchResponse.ItemsEntry
	9,  // 1: pb.BatteryFaultListRequest.begin_at:type_name -> google.protobuf.Timestamp
	9,  // 2: pb.BatteryFaultListRequest.end_at:type_name -> google.protobuf.Timestamp
	0,  // 3: pb.BatteryFaultListRequest.fault:type_name -> pb.BatteryFaultType
	0,  // 4: pb.BatteryFault.fault:type_name -> pb.BatteryFaultType
	9,  // 5: pb.BatteryFault.begin_at:type_name -> google.protobuf.Timestamp
	9,  // 6: pb.BatteryFault.end_at:type_name -> google.protobuf.Timestamp
	10, // 7: pb.BatteryFaultListResponse.pagination:type_name -> pb.Pagination
	6,  // 8: pb.BatteryFaultListResponse.items:type_name -> pb.BatteryFault
	11, // 9: pb.BatteryBatchResponse.ItemsEntry.value:type_name -> xcpb.Battery
	2,  // 10: pb.Battery.Batch:input_type -> pb.BatteryBatchRequest
	1,  // 11: pb.Battery.Sample:input_type -> pb.BatterySnRequest
	5,  // 12: pb.Battery.FaultList:input_type -> pb.BatteryFaultListRequest
	3,  // 13: pb.Battery.Batch:output_type -> pb.BatteryBatchResponse
	4,  // 14: pb.Battery.Sample:output_type -> pb.BatterySampleResponse
	7,  // 15: pb.Battery.FaultList:output_type -> pb.BatteryFaultListResponse
	13, // [13:16] is the sub-list for method output_type
	10, // [10:13] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_battery_proto_init() }
func file_battery_proto_init() {
	if File_battery_proto != nil {
		return
	}
	file_pagination_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_battery_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatterySnRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battery_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatteryBatchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battery_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatteryBatchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battery_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatterySampleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battery_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatteryFaultListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battery_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatteryFault); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battery_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatteryFaultListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_battery_proto_msgTypes[4].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_battery_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_battery_proto_goTypes,
		DependencyIndexes: file_battery_proto_depIdxs,
		EnumInfos:         file_battery_proto_enumTypes,
		MessageInfos:      file_battery_proto_msgTypes,
	}.Build()
	File_battery_proto = out.File
	file_battery_proto_rawDesc = nil
	file_battery_proto_goTypes = nil
	file_battery_proto_depIdxs = nil
}
