// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: cabinet.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CabinetStatus int32

const (
	CabinetStatus_initializing CabinetStatus = 0
	CabinetStatus_normal       CabinetStatus = 1
	CabinetStatus_abnormal     CabinetStatus = 2
)

// Enum value maps for CabinetStatus.
var (
	CabinetStatus_name = map[int32]string{
		0: "initializing",
		1: "normal",
		2: "abnormal",
	}
	CabinetStatus_value = map[string]int32{
		"initializing": 0,
		"normal":       1,
		"abnormal":     2,
	}
)

func (x CabinetStatus) Enum() *CabinetStatus {
	p := new(CabinetStatus)
	*p = x
	return p
}

func (x CabinetStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CabinetStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_cabinet_proto_enumTypes[0].Descriptor()
}

func (CabinetStatus) Type() protoreflect.EnumType {
	return &file_cabinet_proto_enumTypes[0]
}

func (x CabinetStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CabinetStatus.Descriptor instead.
func (CabinetStatus) EnumDescriptor() ([]byte, []int) {
	return file_cabinet_proto_rawDescGZIP(), []int{0}
}

type CabinetSyncItem_CabinetSyncHealth int32

const (
	CabinetSyncItem_offline CabinetSyncItem_CabinetSyncHealth = 0
	CabinetSyncItem_online  CabinetSyncItem_CabinetSyncHealth = 1
	CabinetSyncItem_fault   CabinetSyncItem_CabinetSyncHealth = 2
)

// Enum value maps for CabinetSyncItem_CabinetSyncHealth.
var (
	CabinetSyncItem_CabinetSyncHealth_name = map[int32]string{
		0: "offline",
		1: "online",
		2: "fault",
	}
	CabinetSyncItem_CabinetSyncHealth_value = map[string]int32{
		"offline": 0,
		"online":  1,
		"fault":   2,
	}
)

func (x CabinetSyncItem_CabinetSyncHealth) Enum() *CabinetSyncItem_CabinetSyncHealth {
	p := new(CabinetSyncItem_CabinetSyncHealth)
	*p = x
	return p
}

func (x CabinetSyncItem_CabinetSyncHealth) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CabinetSyncItem_CabinetSyncHealth) Descriptor() protoreflect.EnumDescriptor {
	return file_cabinet_proto_enumTypes[1].Descriptor()
}

func (CabinetSyncItem_CabinetSyncHealth) Type() protoreflect.EnumType {
	return &file_cabinet_proto_enumTypes[1]
}

func (x CabinetSyncItem_CabinetSyncHealth) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CabinetSyncItem_CabinetSyncHealth.Descriptor instead.
func (CabinetSyncItem_CabinetSyncHealth) EnumDescriptor() ([]byte, []int) {
	return file_cabinet_proto_rawDescGZIP(), []int{6, 0}
}

type CabinetBatchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Serial []string `protobuf:"bytes,1,rep,name=serial,proto3" json:"serial,omitempty"`
}

func (x *CabinetBatchRequest) Reset() {
	*x = CabinetBatchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cabinet_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CabinetBatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CabinetBatchRequest) ProtoMessage() {}

func (x *CabinetBatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cabinet_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CabinetBatchRequest.ProtoReflect.Descriptor instead.
func (*CabinetBatchRequest) Descriptor() ([]byte, []int) {
	return file_cabinet_proto_rawDescGZIP(), []int{0}
}

func (x *CabinetBatchRequest) GetSerial() []string {
	if x != nil {
		return x.Serial
	}
	return nil
}

type CabinetBatchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*CabinetItem `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *CabinetBatchResponse) Reset() {
	*x = CabinetBatchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cabinet_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CabinetBatchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CabinetBatchResponse) ProtoMessage() {}

func (x *CabinetBatchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cabinet_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CabinetBatchResponse.ProtoReflect.Descriptor instead.
func (*CabinetBatchResponse) Descriptor() ([]byte, []int) {
	return file_cabinet_proto_rawDescGZIP(), []int{1}
}

func (x *CabinetBatchResponse) GetItems() []*CabinetItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type CabinetItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Serial      string            `protobuf:"bytes,1,opt,name=serial,proto3" json:"serial,omitempty"`
	Online      bool              `protobuf:"varint,2,opt,name=online,proto3" json:"online,omitempty"`
	Status      CabinetStatus     `protobuf:"varint,3,opt,name=status,proto3,enum=pb.CabinetStatus" json:"status,omitempty"`
	Enable      bool              `protobuf:"varint,4,opt,name=enable,proto3" json:"enable,omitempty"`
	Lng         *float64          `protobuf:"fixed64,5,opt,name=lng,proto3,oneof" json:"lng,omitempty"`
	Lat         *float64          `protobuf:"fixed64,6,opt,name=lat,proto3,oneof" json:"lat,omitempty"`
	Gsm         *float64          `protobuf:"fixed64,7,opt,name=gsm,proto3,oneof" json:"gsm,omitempty"`
	Voltage     *float64          `protobuf:"fixed64,8,opt,name=voltage,proto3,oneof" json:"voltage,omitempty"`
	Current     *float64          `protobuf:"fixed64,9,opt,name=current,proto3,oneof" json:"current,omitempty"`
	Temperature *float64          `protobuf:"fixed64,10,opt,name=temperature,proto3,oneof" json:"temperature,omitempty"`
	Electricity *float64          `protobuf:"fixed64,11,opt,name=electricity,proto3,oneof" json:"electricity,omitempty"`
	Bins        []*CabinetBinItem `protobuf:"bytes,12,rep,name=bins,proto3" json:"bins,omitempty"`
}

func (x *CabinetItem) Reset() {
	*x = CabinetItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cabinet_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CabinetItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CabinetItem) ProtoMessage() {}

func (x *CabinetItem) ProtoReflect() protoreflect.Message {
	mi := &file_cabinet_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CabinetItem.ProtoReflect.Descriptor instead.
func (*CabinetItem) Descriptor() ([]byte, []int) {
	return file_cabinet_proto_rawDescGZIP(), []int{2}
}

func (x *CabinetItem) GetSerial() string {
	if x != nil {
		return x.Serial
	}
	return ""
}

func (x *CabinetItem) GetOnline() bool {
	if x != nil {
		return x.Online
	}
	return false
}

func (x *CabinetItem) GetStatus() CabinetStatus {
	if x != nil {
		return x.Status
	}
	return CabinetStatus_initializing
}

func (x *CabinetItem) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

func (x *CabinetItem) GetLng() float64 {
	if x != nil && x.Lng != nil {
		return *x.Lng
	}
	return 0
}

func (x *CabinetItem) GetLat() float64 {
	if x != nil && x.Lat != nil {
		return *x.Lat
	}
	return 0
}

func (x *CabinetItem) GetGsm() float64 {
	if x != nil && x.Gsm != nil {
		return *x.Gsm
	}
	return 0
}

func (x *CabinetItem) GetVoltage() float64 {
	if x != nil && x.Voltage != nil {
		return *x.Voltage
	}
	return 0
}

func (x *CabinetItem) GetCurrent() float64 {
	if x != nil && x.Current != nil {
		return *x.Current
	}
	return 0
}

func (x *CabinetItem) GetTemperature() float64 {
	if x != nil && x.Temperature != nil {
		return *x.Temperature
	}
	return 0
}

func (x *CabinetItem) GetElectricity() float64 {
	if x != nil && x.Electricity != nil {
		return *x.Electricity
	}
	return 0
}

func (x *CabinetItem) GetBins() []*CabinetBinItem {
	if x != nil {
		return x.Bins
	}
	return nil
}

type CabinetBinItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ordinal       int64   `protobuf:"varint,1,opt,name=ordinal,proto3" json:"ordinal,omitempty"`
	Open          bool    `protobuf:"varint,2,opt,name=open,proto3" json:"open,omitempty"`
	Enable        bool    `protobuf:"varint,3,opt,name=enable,proto3" json:"enable,omitempty"`
	Health        bool    `protobuf:"varint,4,opt,name=health,proto3" json:"health,omitempty"`
	BatteryExists bool    `protobuf:"varint,5,opt,name=battery_exists,json=batteryExists,proto3" json:"battery_exists,omitempty"`
	BatterySn     string  `protobuf:"bytes,6,opt,name=battery_sn,json=batterySn,proto3" json:"battery_sn,omitempty"`
	Voltage       float64 `protobuf:"fixed64,7,opt,name=voltage,proto3" json:"voltage,omitempty"`
	Current       float64 `protobuf:"fixed64,8,opt,name=current,proto3" json:"current,omitempty"`
	Soc           float64 `protobuf:"fixed64,9,opt,name=soc,proto3" json:"soc,omitempty"`
	Soh           float64 `protobuf:"fixed64,10,opt,name=soh,proto3" json:"soh,omitempty"`
}

func (x *CabinetBinItem) Reset() {
	*x = CabinetBinItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cabinet_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CabinetBinItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CabinetBinItem) ProtoMessage() {}

func (x *CabinetBinItem) ProtoReflect() protoreflect.Message {
	mi := &file_cabinet_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CabinetBinItem.ProtoReflect.Descriptor instead.
func (*CabinetBinItem) Descriptor() ([]byte, []int) {
	return file_cabinet_proto_rawDescGZIP(), []int{3}
}

func (x *CabinetBinItem) GetOrdinal() int64 {
	if x != nil {
		return x.Ordinal
	}
	return 0
}

func (x *CabinetBinItem) GetOpen() bool {
	if x != nil {
		return x.Open
	}
	return false
}

func (x *CabinetBinItem) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

func (x *CabinetBinItem) GetHealth() bool {
	if x != nil {
		return x.Health
	}
	return false
}

func (x *CabinetBinItem) GetBatteryExists() bool {
	if x != nil {
		return x.BatteryExists
	}
	return false
}

func (x *CabinetBinItem) GetBatterySn() string {
	if x != nil {
		return x.BatterySn
	}
	return ""
}

func (x *CabinetBinItem) GetVoltage() float64 {
	if x != nil {
		return x.Voltage
	}
	return 0
}

func (x *CabinetBinItem) GetCurrent() float64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *CabinetBinItem) GetSoc() float64 {
	if x != nil {
		return x.Soc
	}
	return 0
}

func (x *CabinetBinItem) GetSoh() float64 {
	if x != nil {
		return x.Soh
	}
	return 0
}

type CabinetSyncRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Serial  []string `protobuf:"bytes,1,rep,name=serial,proto3" json:"serial,omitempty"`
	FullSoc float64  `protobuf:"fixed64,2,opt,name=full_soc,json=fullSoc,proto3" json:"full_soc,omitempty"`
}

func (x *CabinetSyncRequest) Reset() {
	*x = CabinetSyncRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cabinet_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CabinetSyncRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CabinetSyncRequest) ProtoMessage() {}

func (x *CabinetSyncRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cabinet_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CabinetSyncRequest.ProtoReflect.Descriptor instead.
func (*CabinetSyncRequest) Descriptor() ([]byte, []int) {
	return file_cabinet_proto_rawDescGZIP(), []int{4}
}

func (x *CabinetSyncRequest) GetSerial() []string {
	if x != nil {
		return x.Serial
	}
	return nil
}

func (x *CabinetSyncRequest) GetFullSoc() float64 {
	if x != nil {
		return x.FullSoc
	}
	return 0
}

type CabinetSyncResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*CabinetSyncItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *CabinetSyncResponse) Reset() {
	*x = CabinetSyncResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cabinet_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CabinetSyncResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CabinetSyncResponse) ProtoMessage() {}

func (x *CabinetSyncResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cabinet_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CabinetSyncResponse.ProtoReflect.Descriptor instead.
func (*CabinetSyncResponse) Descriptor() ([]byte, []int) {
	return file_cabinet_proto_rawDescGZIP(), []int{5}
}

func (x *CabinetSyncResponse) GetItems() []*CabinetSyncItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type CabinetSyncItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Doors              int64                             `protobuf:"varint,1,opt,name=doors,proto3" json:"doors,omitempty"`
	Health             CabinetSyncItem_CabinetSyncHealth `protobuf:"varint,2,opt,name=health,proto3,enum=pb.CabinetSyncItem_CabinetSyncHealth" json:"health,omitempty"`
	BatteryNum         int64                             `protobuf:"varint,3,opt,name=battery_num,json=batteryNum,proto3" json:"battery_num,omitempty"`
	BatteryFullNum     int64                             `protobuf:"varint,4,opt,name=battery_full_num,json=batteryFullNum,proto3" json:"battery_full_num,omitempty"`
	BatteryChargingNum int64                             `protobuf:"varint,5,opt,name=battery_charging_num,json=batteryChargingNum,proto3" json:"battery_charging_num,omitempty"`
	EmptyBinNum        int64                             `protobuf:"varint,6,opt,name=empty_bin_num,json=emptyBinNum,proto3" json:"empty_bin_num,omitempty"`
	LockedBinNum       int64                             `protobuf:"varint,7,opt,name=locked_bin_num,json=lockedBinNum,proto3" json:"locked_bin_num,omitempty"`
	Bins               []*CabinetSyncBin                 `protobuf:"bytes,8,rep,name=bins,proto3" json:"bins,omitempty"`
}

func (x *CabinetSyncItem) Reset() {
	*x = CabinetSyncItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cabinet_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CabinetSyncItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CabinetSyncItem) ProtoMessage() {}

func (x *CabinetSyncItem) ProtoReflect() protoreflect.Message {
	mi := &file_cabinet_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CabinetSyncItem.ProtoReflect.Descriptor instead.
func (*CabinetSyncItem) Descriptor() ([]byte, []int) {
	return file_cabinet_proto_rawDescGZIP(), []int{6}
}

func (x *CabinetSyncItem) GetDoors() int64 {
	if x != nil {
		return x.Doors
	}
	return 0
}

func (x *CabinetSyncItem) GetHealth() CabinetSyncItem_CabinetSyncHealth {
	if x != nil {
		return x.Health
	}
	return CabinetSyncItem_offline
}

func (x *CabinetSyncItem) GetBatteryNum() int64 {
	if x != nil {
		return x.BatteryNum
	}
	return 0
}

func (x *CabinetSyncItem) GetBatteryFullNum() int64 {
	if x != nil {
		return x.BatteryFullNum
	}
	return 0
}

func (x *CabinetSyncItem) GetBatteryChargingNum() int64 {
	if x != nil {
		return x.BatteryChargingNum
	}
	return 0
}

func (x *CabinetSyncItem) GetEmptyBinNum() int64 {
	if x != nil {
		return x.EmptyBinNum
	}
	return 0
}

func (x *CabinetSyncItem) GetLockedBinNum() int64 {
	if x != nil {
		return x.LockedBinNum
	}
	return 0
}

func (x *CabinetSyncItem) GetBins() []*CabinetSyncBin {
	if x != nil {
		return x.Bins
	}
	return nil
}

type CabinetSyncBin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index      int64    `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	BatterySn  string   `protobuf:"bytes,2,opt,name=battery_sn,json=batterySn,proto3" json:"battery_sn,omitempty"`
	Full       bool     `protobuf:"varint,3,opt,name=full,proto3" json:"full,omitempty"`
	Battery    bool     `protobuf:"varint,4,opt,name=battery,proto3" json:"battery,omitempty"`
	Soc        float64  `protobuf:"fixed64,5,opt,name=soc,proto3" json:"soc,omitempty"`
	OpenStatus bool     `protobuf:"varint,6,opt,name=open_status,json=openStatus,proto3" json:"open_status,omitempty"`
	DoorHealth bool     `protobuf:"varint,7,opt,name=door_health,json=doorHealth,proto3" json:"door_health,omitempty"`
	Current    float64  `protobuf:"fixed64,8,opt,name=current,proto3" json:"current,omitempty"`
	Voltage    float64  `protobuf:"fixed64,9,opt,name=voltage,proto3" json:"voltage,omitempty"`
	Faults     []string `protobuf:"bytes,10,rep,name=faults,proto3" json:"faults,omitempty"`
	Remark     *string  `protobuf:"bytes,11,opt,name=remark,proto3,oneof" json:"remark,omitempty"`
}

func (x *CabinetSyncBin) Reset() {
	*x = CabinetSyncBin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cabinet_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CabinetSyncBin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CabinetSyncBin) ProtoMessage() {}

func (x *CabinetSyncBin) ProtoReflect() protoreflect.Message {
	mi := &file_cabinet_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CabinetSyncBin.ProtoReflect.Descriptor instead.
func (*CabinetSyncBin) Descriptor() ([]byte, []int) {
	return file_cabinet_proto_rawDescGZIP(), []int{7}
}

func (x *CabinetSyncBin) GetIndex() int64 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *CabinetSyncBin) GetBatterySn() string {
	if x != nil {
		return x.BatterySn
	}
	return ""
}

func (x *CabinetSyncBin) GetFull() bool {
	if x != nil {
		return x.Full
	}
	return false
}

func (x *CabinetSyncBin) GetBattery() bool {
	if x != nil {
		return x.Battery
	}
	return false
}

func (x *CabinetSyncBin) GetSoc() float64 {
	if x != nil {
		return x.Soc
	}
	return 0
}

func (x *CabinetSyncBin) GetOpenStatus() bool {
	if x != nil {
		return x.OpenStatus
	}
	return false
}

func (x *CabinetSyncBin) GetDoorHealth() bool {
	if x != nil {
		return x.DoorHealth
	}
	return false
}

func (x *CabinetSyncBin) GetCurrent() float64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *CabinetSyncBin) GetVoltage() float64 {
	if x != nil {
		return x.Voltage
	}
	return 0
}

func (x *CabinetSyncBin) GetFaults() []string {
	if x != nil {
		return x.Faults
	}
	return nil
}

func (x *CabinetSyncBin) GetRemark() string {
	if x != nil && x.Remark != nil {
		return *x.Remark
	}
	return ""
}

var File_cabinet_proto protoreflect.FileDescriptor

var file_cabinet_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x63, 0x61, 0x62, 0x69, 0x6e, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x02, 0x70, 0x62, 0x22, 0x2d, 0x0a, 0x13, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x65, 0x74, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x72, 0x69,
	0x61, 0x6c, 0x22, 0x3d, 0x0a, 0x14, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x65, 0x74, 0x42, 0x61, 0x74,
	0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x43,
	0x61, 0x62, 0x69, 0x6e, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x22, 0xc9, 0x03, 0x0a, 0x0b, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x65, 0x74, 0x49, 0x74, 0x65,
	0x6d, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x6e, 0x6c,
	0x69, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x6f, 0x6e, 0x6c, 0x69, 0x6e,
	0x65, 0x12, 0x29, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x65, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x12, 0x15, 0x0a, 0x03, 0x6c, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x01, 0x48, 0x00, 0x52, 0x03, 0x6c, 0x6e, 0x67, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x6c,
	0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x48, 0x01, 0x52, 0x03, 0x6c, 0x61, 0x74, 0x88,
	0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x67, 0x73, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x48,
	0x02, 0x52, 0x03, 0x67, 0x73, 0x6d, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x76, 0x6f, 0x6c,
	0x74, 0x61, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x48, 0x03, 0x52, 0x07, 0x76, 0x6f,
	0x6c, 0x74, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x48, 0x04, 0x52, 0x07, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x48, 0x05, 0x52, 0x0b,
	0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x88, 0x01, 0x01, 0x12, 0x25,
	0x0a, 0x0b, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x72, 0x69, 0x63, 0x69, 0x74, 0x79, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x01, 0x48, 0x06, 0x52, 0x0b, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x72, 0x69, 0x63, 0x69,
	0x74, 0x79, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x04, 0x62, 0x69, 0x6e, 0x73, 0x18, 0x0c, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x65, 0x74,
	0x42, 0x69, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x62, 0x69, 0x6e, 0x73, 0x42, 0x06, 0x0a,
	0x04, 0x5f, 0x6c, 0x6e, 0x67, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x6c, 0x61, 0x74, 0x42, 0x06, 0x0a,
	0x04, 0x5f, 0x67, 0x73, 0x6d, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x76, 0x6f, 0x6c, 0x74, 0x61, 0x67,
	0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x42, 0x0e, 0x0a,
	0x0c, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x42, 0x0e, 0x0a,
	0x0c, 0x5f, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x72, 0x69, 0x63, 0x69, 0x74, 0x79, 0x22, 0x8c, 0x02,
	0x0a, 0x0e, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x65, 0x74, 0x42, 0x69, 0x6e, 0x49, 0x74, 0x65, 0x6d,
	0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6f, 0x70,
	0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x12, 0x16,
	0x0a, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x12, 0x25,
	0x0a, 0x0e, 0x62, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x5f, 0x65, 0x78, 0x69, 0x73, 0x74, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x62, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x45,
	0x78, 0x69, 0x73, 0x74, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79,
	0x5f, 0x73, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x61, 0x74, 0x74, 0x65,
	0x72, 0x79, 0x53, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x76, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x6f, 0x63, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x73, 0x6f, 0x63, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x6f,
	0x68, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x73, 0x6f, 0x68, 0x22, 0x47, 0x0a, 0x12,
	0x43, 0x61, 0x62, 0x69, 0x6e, 0x65, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x75,
	0x6c, 0x6c, 0x5f, 0x73, 0x6f, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x66, 0x75,
	0x6c, 0x6c, 0x53, 0x6f, 0x63, 0x22, 0x40, 0x0a, 0x13, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x65, 0x74,
	0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x62,
	0x2e, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x65, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x8e, 0x03, 0x0a, 0x0f, 0x43, 0x61, 0x62, 0x69,
	0x6e, 0x65, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x64,
	0x6f, 0x6f, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x64, 0x6f, 0x6f, 0x72,
	0x73, 0x12, 0x3d, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x25, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x65, 0x74, 0x53, 0x79,
	0x6e, 0x63, 0x49, 0x74, 0x65, 0x6d, 0x2e, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x65, 0x74, 0x53, 0x79,
	0x6e, 0x63, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x06, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68,
	0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x5f, 0x6e, 0x75, 0x6d, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x62, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x4e, 0x75,
	0x6d, 0x12, 0x28, 0x0a, 0x10, 0x62, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x5f, 0x66, 0x75, 0x6c,
	0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x62, 0x61, 0x74,
	0x74, 0x65, 0x72, 0x79, 0x46, 0x75, 0x6c, 0x6c, 0x4e, 0x75, 0x6d, 0x12, 0x30, 0x0a, 0x14, 0x62,
	0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x5f, 0x63, 0x68, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x67, 0x5f,
	0x6e, 0x75, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x62, 0x61, 0x74, 0x74, 0x65,
	0x72, 0x79, 0x43, 0x68, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x67, 0x4e, 0x75, 0x6d, 0x12, 0x22, 0x0a,
	0x0d, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x5f, 0x62, 0x69, 0x6e, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x42, 0x69, 0x6e, 0x4e, 0x75,
	0x6d, 0x12, 0x24, 0x0a, 0x0e, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x5f, 0x62, 0x69, 0x6e, 0x5f,
	0x6e, 0x75, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x6c, 0x6f, 0x63, 0x6b, 0x65,
	0x64, 0x42, 0x69, 0x6e, 0x4e, 0x75, 0x6d, 0x12, 0x26, 0x0a, 0x04, 0x62, 0x69, 0x6e, 0x73, 0x18,
	0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x61, 0x62, 0x69, 0x6e,
	0x65, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x42, 0x69, 0x6e, 0x52, 0x04, 0x62, 0x69, 0x6e, 0x73, 0x22,
	0x37, 0x0a, 0x11, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x65, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x48, 0x65,
	0x61, 0x6c, 0x74, 0x68, 0x12, 0x0b, 0x0a, 0x07, 0x6f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x10,
	0x00, 0x12, 0x0a, 0x0a, 0x06, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x10, 0x01, 0x12, 0x09, 0x0a,
	0x05, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x10, 0x02, 0x22, 0xbb, 0x02, 0x0a, 0x0e, 0x43, 0x61, 0x62,
	0x69, 0x6e, 0x65, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x42, 0x69, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x5f, 0x73, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x53, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x66, 0x75, 0x6c, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04,
	0x66, 0x75, 0x6c, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x62, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x73, 0x6f, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x73, 0x6f, 0x63,
	0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x6f, 0x6f, 0x72, 0x5f, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x64, 0x6f, 0x6f, 0x72, 0x48, 0x65, 0x61, 0x6c,
	0x74, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x76, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x76,
	0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x73,
	0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x1b,
	0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f,
	0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x2a, 0x3b, 0x0a, 0x0d, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x65,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x0c, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x61, 0x6c, 0x69, 0x7a, 0x69, 0x6e, 0x67, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x6e, 0x6f, 0x72,
	0x6d, 0x61, 0x6c, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x61, 0x62, 0x6e, 0x6f, 0x72, 0x6d, 0x61,
	0x6c, 0x10, 0x02, 0x32, 0x7e, 0x0a, 0x07, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x65, 0x74, 0x12, 0x3a,
	0x0a, 0x05, 0x42, 0x61, 0x74, 0x63, 0x68, 0x12, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x61, 0x62,
	0x69, 0x6e, 0x65, 0x74, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x65, 0x74, 0x42, 0x61, 0x74,
	0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x04, 0x53, 0x79,
	0x6e, 0x63, 0x12, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x61, 0x62, 0x69, 0x6e, 0x65, 0x74, 0x53,
	0x79, 0x6e, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x70, 0x62, 0x2e,
	0x43, 0x61, 0x62, 0x69, 0x6e, 0x65, 0x74, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x42, 0x26, 0x5a, 0x24, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x61, 0x75, 0x72, 0x6f, 0x72, 0x61, 0x72, 0x69, 0x64, 0x65, 0x2f, 0x61, 0x64, 0x61,
	0x70, 0x74, 0x65, 0x72, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_cabinet_proto_rawDescOnce sync.Once
	file_cabinet_proto_rawDescData = file_cabinet_proto_rawDesc
)

func file_cabinet_proto_rawDescGZIP() []byte {
	file_cabinet_proto_rawDescOnce.Do(func() {
		file_cabinet_proto_rawDescData = protoimpl.X.CompressGZIP(file_cabinet_proto_rawDescData)
	})
	return file_cabinet_proto_rawDescData
}

var file_cabinet_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_cabinet_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_cabinet_proto_goTypes = []interface{}{
	(CabinetStatus)(0),                     // 0: pb.CabinetStatus
	(CabinetSyncItem_CabinetSyncHealth)(0), // 1: pb.CabinetSyncItem.CabinetSyncHealth
	(*CabinetBatchRequest)(nil),            // 2: pb.CabinetBatchRequest
	(*CabinetBatchResponse)(nil),           // 3: pb.CabinetBatchResponse
	(*CabinetItem)(nil),                    // 4: pb.CabinetItem
	(*CabinetBinItem)(nil),                 // 5: pb.CabinetBinItem
	(*CabinetSyncRequest)(nil),             // 6: pb.CabinetSyncRequest
	(*CabinetSyncResponse)(nil),            // 7: pb.CabinetSyncResponse
	(*CabinetSyncItem)(nil),                // 8: pb.CabinetSyncItem
	(*CabinetSyncBin)(nil),                 // 9: pb.CabinetSyncBin
}
var file_cabinet_proto_depIdxs = []int32{
	4, // 0: pb.CabinetBatchResponse.items:type_name -> pb.CabinetItem
	0, // 1: pb.CabinetItem.status:type_name -> pb.CabinetStatus
	5, // 2: pb.CabinetItem.bins:type_name -> pb.CabinetBinItem
	8, // 3: pb.CabinetSyncResponse.items:type_name -> pb.CabinetSyncItem
	1, // 4: pb.CabinetSyncItem.health:type_name -> pb.CabinetSyncItem.CabinetSyncHealth
	9, // 5: pb.CabinetSyncItem.bins:type_name -> pb.CabinetSyncBin
	2, // 6: pb.Cabinet.Batch:input_type -> pb.CabinetBatchRequest
	6, // 7: pb.Cabinet.Sync:input_type -> pb.CabinetSyncRequest
	3, // 8: pb.Cabinet.Batch:output_type -> pb.CabinetBatchResponse
	7, // 9: pb.Cabinet.Sync:output_type -> pb.CabinetSyncResponse
	8, // [8:10] is the sub-list for method output_type
	6, // [6:8] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_cabinet_proto_init() }
func file_cabinet_proto_init() {
	if File_cabinet_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_cabinet_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CabinetBatchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cabinet_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CabinetBatchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cabinet_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CabinetItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cabinet_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CabinetBinItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cabinet_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CabinetSyncRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cabinet_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CabinetSyncResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cabinet_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CabinetSyncItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cabinet_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CabinetSyncBin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_cabinet_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_cabinet_proto_msgTypes[7].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cabinet_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_cabinet_proto_goTypes,
		DependencyIndexes: file_cabinet_proto_depIdxs,
		EnumInfos:         file_cabinet_proto_enumTypes,
		MessageInfos:      file_cabinet_proto_msgTypes,
	}.Build()
	File_cabinet_proto = out.File
	file_cabinet_proto_rawDesc = nil
	file_cabinet_proto_goTypes = nil
	file_cabinet_proto_depIdxs = nil
}
